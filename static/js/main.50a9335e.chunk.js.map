{"version":3,"sources":["components/Button/Button.tsx","components/Input/Input.tsx","components/Image/Image.tsx","components/Carousel-list/Carousel-list.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["Button","type","data","handleButton","isDisabled","className","onClick","disabled","Input","name","id","min","step","max","value","onChange","event","target","Image","image","index","imageSize","src","alt","width","style","CarouselList","images","transformImage","frameSize","animationDuration","transform","transition","map","Carousel","useState","carouselStep","setCarouselStep","setAnimationDuration","setTransformImage","setImageSize","setFrameSize","lastImage","setLastImage","disabledPrevButton","setDisabledPrevButton","disabledNextButton","setDisabledNextButton","imagesCount","length","useEffect","prevLastImage","countImageOnFrame","console","log","nextLastImage","htmlFor","size","duration","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50a9335e.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  type: string;\n  data: string;\n  handleButton: () => void;\n  isDisabled: boolean;\n}\nexport const Button: React.FC<Props> = ({\n  type,\n  data,\n  handleButton,\n  isDisabled,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      data-cy={data}\n      className=\"btn btn-light\"\n      onClick={handleButton}\n      disabled={isDisabled}\n    >\n      {type}\n    </button>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  name: string;\n  id: string;\n  min: number;\n  step: number;\n  max: number;\n  value: number;\n  onChange: (value: number) => void;\n}\n\nexport const Input: React.FC<Props> = ({\n  name,\n  id,\n  min,\n  step,\n  max,\n  value,\n  onChange,\n}) => {\n  return (\n    <input\n      type=\"number\"\n      className=\"Carousel__input\"\n      name={name}\n      id={id}\n      min={min}\n      step={step}\n      max={max}\n      value={value}\n      onChange={event => onChange(+event.target.value)}\n    />\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  image: string;\n  index: number;\n  imageSize: number;\n}\nexport const Image: React.FC<Props> = ({\n  image,\n  index,\n  imageSize,\n}) => {\n  return (\n    <li>\n      <img\n        src={image}\n        alt={`${index + 1}`}\n        width={imageSize}\n        style={{ width: `${imageSize}px` }}\n      />\n    </li>\n  );\n};\n","import React from 'react';\nimport { Image } from '../Image';\n\ninterface Props {\n  images: string[];\n  transformImage: number;\n  frameSize: number;\n  animationDuration: number;\n  imageSize: number;\n}\n\nexport const CarouselList: React.FC<Props> = ({\n  images,\n  transformImage,\n  frameSize,\n  animationDuration,\n  imageSize,\n}) => {\n  return (\n    <ul\n      className=\"Carousel__list\"\n      style={{\n        transform: `translateX(${transformImage}px)`,\n        width: `${frameSize}px`,\n        transition: `transform ${animationDuration}ms`,\n      }}\n    >\n      {images.map((image, index) => (\n        <Image\n          key={image}\n          image={image}\n          index={index}\n          imageSize={imageSize}\n        />\n      ))}\n    </ul>\n  );\n};\n","import {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport './Carousel.scss';\nimport { Button } from './Button';\nimport { Input } from './Input';\nimport { CarouselList } from './Carousel-list';\n\ninterface Props {\n  images: string[];\n}\n\nconst Carousel: FC<Props> = ({ images }) => {\n  const [carouselStep, setCarouselStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [transformImage, setTransformImage] = useState(0);\n  const [imageSize, setImageSize] = useState(130);\n  const [frameSize, setFrameSize] = useState(imageSize * 3);\n  const [lastImage, setLastImage] = useState(frameSize / imageSize);\n  const [disabledPrevButton, setDisabledPrevButton] = useState(false);\n  const [disabledNextButton, setDisabledNextButton] = useState(false);\n  const imagesCount = images.length;\n\n  useEffect(() => {\n    setLastImage(frameSize / imageSize);\n    setDisabledPrevButton(true);\n  }, [frameSize, imageSize]);\n\n  useEffect(() => {\n    setLastImage(frameSize / imageSize);\n    setTransformImage(0);\n    setDisabledPrevButton(true);\n    setDisabledNextButton(false);\n  }, [carouselStep, animationDuration, imageSize, frameSize]);\n\n  const handlePrevButton = () => {\n    const prevLastImage = lastImage - carouselStep;\n    const countImageOnFrame = frameSize / imageSize;\n\n    // eslint-disable-next-line no-console\n    console.log(countImageOnFrame);\n    if (prevLastImage >= countImageOnFrame) {\n      setTransformImage(transformImage + imageSize * carouselStep);\n      setLastImage(prevLastImage);\n      setDisabledNextButton(false);\n    }\n\n    if (prevLastImage < countImageOnFrame) {\n      const restImages = lastImage - countImageOnFrame;\n\n      setTransformImage(transformImage + imageSize * restImages);\n      setLastImage(countImageOnFrame);\n      setDisabledPrevButton(true);\n    }\n\n    if (prevLastImage === countImageOnFrame) {\n      setDisabledPrevButton(true);\n    }\n  };\n\n  const handleNextButton = () => {\n    const nextLastImage = lastImage + carouselStep;\n\n    if (nextLastImage <= imagesCount) {\n      setTransformImage(transformImage + -(imageSize * carouselStep));\n      setLastImage(nextLastImage);\n      setDisabledPrevButton(false);\n    }\n\n    if (nextLastImage >= imagesCount) {\n      const restOfImage = imagesCount - lastImage;\n\n      setTransformImage(transformImage + -(imageSize * restOfImage));\n      setLastImage(10);\n      setDisabledNextButton(true);\n    }\n  };\n\n  const handleWidth = (width: number) => {\n    setImageSize(width);\n    setFrameSize((frameSize / imageSize) * width);\n  };\n\n  const handleFrameSize = (size: number) => {\n    setFrameSize(size);\n  };\n\n  const handleStep = (step: number) => {\n    setCarouselStep(step);\n  };\n\n  const handleAnimationDuration = (duration: number) => {\n    setAnimationDuration(duration);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\" style={{ width: `${frameSize}px` }}>\n        <CarouselList\n          images={images}\n          transformImage={transformImage}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          imageSize={imageSize}\n        />\n      </div>\n      <div className=\"Carousel__buttons\">\n        <Button\n          type=\"Prev\"\n          data=\"prev\"\n          handleButton={handlePrevButton}\n          isDisabled={disabledPrevButton}\n        />\n        <Button\n          type=\"Next\"\n          data=\"next\"\n          handleButton={handleNextButton}\n          isDisabled={disabledNextButton}\n        />\n      </div>\n\n      <div className=\"Carousel__control\">\n        <div className=\"Carousel__labels\">\n          <label className=\"Carousel__label\" htmlFor=\"itemId\">\n            Width\n          </label>\n          <label className=\"Carousel__label\" htmlFor=\"frameId\">\n            Frame size\n          </label>\n\n          <label className=\"Carousel__label\" htmlFor=\"stepId\">\n            Step\n          </label>\n\n          <label className=\"Carousel__label\" htmlFor=\"animationDuration\">\n            Animation duration\n          </label>\n        </div>\n        <div className=\"Carousel__inputs\">\n          <Input\n            name=\"ItemWidth\"\n            id=\"itemId\"\n            min={50}\n            step={10}\n            max={260}\n            value={imageSize}\n            onChange={handleWidth}\n          />\n          <Input\n            name=\"frameSize\"\n            id=\"frameId\"\n            min={imageSize}\n            step={imageSize}\n            max={5 * imageSize}\n            value={frameSize}\n            onChange={handleFrameSize}\n          />\n\n          <Input\n            name=\"step\"\n            id=\"stepId\"\n            value={carouselStep}\n            min={1}\n            max={5}\n            step={1}\n            onChange={handleStep}\n          />\n\n          <Input\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            min={100}\n            max={3000}\n            step={100}\n            value={animationDuration}\n            onChange={handleAnimationDuration}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <Carousel images={images} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}