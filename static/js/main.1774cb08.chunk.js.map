{"version":3,"sources":["components/Button/Button.tsx","components/Input/Input.tsx","components/CarouselList/CarouselList.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["Button","buttonText","dataTestAttribute","onClick","isDisabled","type","className","disabled","Input","name","id","min","step","max","value","onChange","event","Number","target","CarouselList","images","transformImage","frameSize","animationDuration","imageSize","style","transform","width","transition","map","image","index","src","alt","Carousel","useState","carouselStep","setCarouselStep","setAnimationDuration","setTransformImage","setImageSize","setFrameSize","lastImage","setLastImage","disabledPrevButton","setDisabledPrevButton","disabledNextButton","setDisabledNextButton","imagesCount","length","useEffect","prevLastImage","nextLastImage","htmlFor","size","duration","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1774cb08.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  buttonText: string;\n  dataTestAttribute: string;\n  onClick: () => void;\n  isDisabled: boolean;\n}\nexport const Button: React.FC<Props> = ({\n  buttonText,\n  dataTestAttribute,\n  onClick,\n  isDisabled,\n}) => {\n  const handleClick = () => {\n    onClick();\n  };\n\n  return (\n    <button\n      type=\"button\"\n      data-cy={dataTestAttribute}\n      className=\"btn btn-light\"\n      onClick={handleClick}\n      disabled={isDisabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  name: string;\n  id: string;\n  min: number;\n  step: number;\n  max: number;\n  value: number;\n  onChange: (value: number) => void;\n}\n\nexport const Input: React.FC<Props> = ({\n  name,\n  id,\n  min,\n  step,\n  max,\n  value,\n  onChange,\n}) => {\n  return (\n    <input\n      type=\"number\"\n      className=\"Carousel__input\"\n      name={name}\n      id={id}\n      min={min}\n      step={step}\n      max={max}\n      value={value}\n      onChange={event => onChange(Number(event.target.value))}\n    />\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  images: string[];\n  transformImage: number;\n  frameSize: number;\n  animationDuration: number;\n  imageSize: number;\n}\nexport const CarouselList: React.FC<Props> = ({\n  images,\n  transformImage,\n  frameSize,\n  animationDuration,\n  imageSize,\n}) => {\n  return (\n    <ul\n      className=\"Carousel__list\"\n      style={{\n        transform: `translateX(${transformImage}px)`,\n        width: `${frameSize * imageSize}px`,\n        transition: `transform ${animationDuration}ms`,\n      }}\n    >\n      {images.map((image, index) => (\n        <li\n          className=\"Carousel__item\"\n          key={image}\n        >\n          <img\n            src={image}\n            alt={`icon-${index + 1}`}\n            width={imageSize}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport './Carousel.scss';\nimport { Button } from './Button';\nimport { Input } from './Input';\nimport { CarouselList } from './CarouselList';\n\ninterface Props {\n  images: string[];\n}\nconst Carousel: FC<Props> = ({ images }) => {\n  const [carouselStep, setCarouselStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [transformImage, setTransformImage] = useState(0);\n  const [imageSize, setImageSize] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [lastImage, setLastImage] = useState(frameSize);\n  const [disabledPrevButton, setDisabledPrevButton] = useState(false);\n  const [disabledNextButton, setDisabledNextButton] = useState(false);\n  const imagesCount = images.length;\n\n  useEffect(() => {\n    setLastImage(frameSize);\n    setDisabledPrevButton(true);\n  }, [frameSize, imageSize]);\n\n  useEffect(() => {\n    setLastImage(frameSize);\n    setTransformImage(0);\n    setDisabledPrevButton(true);\n    setDisabledNextButton(false);\n  }, [carouselStep, animationDuration, imageSize, frameSize]);\n\n  const handlePrevButton = () => {\n    const prevLastImage = lastImage - carouselStep;\n\n    if (prevLastImage >= frameSize) {\n      setTransformImage(transformImage + imageSize * carouselStep);\n      setLastImage(prevLastImage);\n      setDisabledNextButton(false);\n    }\n\n    if (prevLastImage < frameSize) {\n      const restImages = lastImage - frameSize;\n\n      setTransformImage(transformImage + imageSize * restImages);\n      setLastImage(frameSize);\n      setDisabledPrevButton(true);\n    }\n\n    if (prevLastImage === frameSize) {\n      setDisabledPrevButton(true);\n    }\n  };\n\n  const handleNextButton = () => {\n    const nextLastImage = lastImage + carouselStep;\n\n    if (nextLastImage <= imagesCount) {\n      setTransformImage(transformImage + -(imageSize * carouselStep));\n      setLastImage(nextLastImage);\n      setDisabledPrevButton(false);\n    }\n\n    if (nextLastImage >= imagesCount) {\n      const restOfImage = imagesCount - lastImage;\n\n      setTransformImage(transformImage + -(imageSize * restOfImage));\n      setLastImage(imagesCount);\n      setDisabledNextButton(true);\n    }\n  };\n\n  const handleWidth = (width: number) => {\n    setImageSize(width);\n  };\n\n  const handleFrameSize = (size: number) => {\n    setFrameSize(size);\n  };\n\n  const handleStep = (step: number) => {\n    setCarouselStep(step);\n  };\n\n  const handleAnimationDuration = (duration: number) => {\n    setAnimationDuration(duration);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\" style={{ width: `${frameSize * imageSize}px` }}>\n        <CarouselList\n          images={images}\n          transformImage={transformImage}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          imageSize={imageSize}\n        />\n      </div>\n      <div className=\"Carousel__buttons\">\n        <Button\n          buttonText=\"Prev\"\n          dataTestAttribute=\"prev\"\n          onClick={handlePrevButton}\n          isDisabled={disabledPrevButton}\n        />\n        <Button\n          buttonText=\"Next\"\n          dataTestAttribute=\"next\"\n          onClick={handleNextButton}\n          isDisabled={disabledNextButton}\n        />\n      </div>\n      <div className=\"Carousel__control\">\n        <div className=\"Carousel__labels\">\n          <label className=\"Carousel__input\" htmlFor=\"itemId\">\n            Width\n          </label>\n          <label className=\"Carousel__input\" htmlFor=\"frameId\">\n            Frame size\n          </label>\n          <label className=\"Carousel__input\" htmlFor=\"stepId\">\n            Step\n          </label>\n          <label className=\"Carousel__input\" htmlFor=\"AnimationDuration\">\n            Animation duration\n          </label>\n        </div>\n        <div className=\"Carousel__inputs\">\n          <Input\n            name=\"width\"\n            id=\"itemId\"\n            min={50}\n            step={10}\n            max={260}\n            value={imageSize}\n            onChange={handleWidth}\n          />\n          <Input\n            name=\"frame-size\"\n            id=\"frameId\"\n            min={1}\n            step={1}\n            max={5}\n            value={frameSize}\n            onChange={handleFrameSize}\n          />\n          <Input\n            name=\"step\"\n            id=\"stepId\"\n            value={carouselStep}\n            min={1}\n            max={5}\n            step={1}\n            onChange={handleStep}\n          />\n          <Input\n            name=\"animation-duration\"\n            id=\"AnimationDuration\"\n            min={100}\n            max={3000}\n            step={100}\n            value={animationDuration}\n            onChange={handleAnimationDuration}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <Carousel images={images} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}